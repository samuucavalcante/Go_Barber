[{"/home/samuel/Github/Go_Barber/web/src/index.tsx":"1","/home/samuel/Github/Go_Barber/web/src/App.tsx":"2","/home/samuel/Github/Go_Barber/web/src/styles/global.ts":"3","/home/samuel/Github/Go_Barber/web/src/hooks/index.tsx":"4","/home/samuel/Github/Go_Barber/web/src/routes/index.tsx":"5","/home/samuel/Github/Go_Barber/web/src/hooks/auth.tsx":"6","/home/samuel/Github/Go_Barber/web/src/hooks/toast.tsx":"7","/home/samuel/Github/Go_Barber/web/src/services/api.ts":"8","/home/samuel/Github/Go_Barber/web/src/pages/SignIn/index.tsx":"9","/home/samuel/Github/Go_Barber/web/src/pages/SignUp/index.tsx":"10","/home/samuel/Github/Go_Barber/web/src/pages/SignIn/styles.ts":"11","/home/samuel/Github/Go_Barber/web/src/pages/SignUp/styles.ts":"12","/home/samuel/Github/Go_Barber/web/src/utils/getValidationErrors.ts":"13","/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/index.tsx":"14","/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/styles.ts":"15","/home/samuel/Github/Go_Barber/web/src/components/Button/index.tsx":"16","/home/samuel/Github/Go_Barber/web/src/components/Input/index.tsx":"17","/home/samuel/Github/Go_Barber/web/src/components/Input/styles.ts":"18","/home/samuel/Github/Go_Barber/web/src/components/Button/styles.ts":"19","/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/Toast/index.tsx":"20","/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/Toast/styles.ts":"21","/home/samuel/Github/Go_Barber/web/src/components/Tooltip/index.tsx":"22","/home/samuel/Github/Go_Barber/web/src/components/Tooltip/styles.ts":"23"},{"size":198,"mtime":1610131979420,"results":"24","hashOfConfig":"25"},{"size":378,"mtime":1610129326735,"results":"26","hashOfConfig":"25"},{"size":446,"mtime":1610129326763,"results":"27","hashOfConfig":"25"},{"size":272,"mtime":1610129326743,"results":"28","hashOfConfig":"25"},{"size":337,"mtime":1610129326743,"results":"29","hashOfConfig":"25"},{"size":1515,"mtime":1610129326743,"results":"30","hashOfConfig":"25"},{"size":1398,"mtime":1610132127681,"results":"31","hashOfConfig":"25"},{"size":116,"mtime":1610129326759,"results":"32","hashOfConfig":"25"},{"size":2788,"mtime":1610143169315,"results":"33","hashOfConfig":"25"},{"size":1990,"mtime":1610129326743,"results":"34","hashOfConfig":"25"},{"size":1418,"mtime":1610129326743,"results":"35","hashOfConfig":"25"},{"size":1386,"mtime":1610129326743,"results":"36","hashOfConfig":"25"},{"size":328,"mtime":1610129326763,"results":"37","hashOfConfig":"25"},{"size":802,"mtime":1610129326743,"results":"38","hashOfConfig":"25"},{"size":162,"mtime":1610129326743,"results":"39","hashOfConfig":"25"},{"size":302,"mtime":1610129326743,"results":"40","hashOfConfig":"25"},{"size":1536,"mtime":1610129326743,"results":"41","hashOfConfig":"25"},{"size":1258,"mtime":1610129326743,"results":"42","hashOfConfig":"25"},{"size":388,"mtime":1610129326743,"results":"43","hashOfConfig":"25"},{"size":1188,"mtime":1610129326743,"results":"44","hashOfConfig":"25"},{"size":1174,"mtime":1610129326743,"results":"45","hashOfConfig":"25"},{"size":355,"mtime":1610129326743,"results":"46","hashOfConfig":"25"},{"size":744,"mtime":1610129326743,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"127w2nv",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/home/samuel/Github/Go_Barber/web/src/index.tsx",[],["97","98","99","100","101"],"/home/samuel/Github/Go_Barber/web/src/App.tsx",[],"/home/samuel/Github/Go_Barber/web/src/styles/global.ts",[],"/home/samuel/Github/Go_Barber/web/src/hooks/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/routes/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/hooks/auth.tsx",[],"/home/samuel/Github/Go_Barber/web/src/hooks/toast.tsx",[],"/home/samuel/Github/Go_Barber/web/src/services/api.ts",[],"/home/samuel/Github/Go_Barber/web/src/pages/SignIn/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/pages/SignUp/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/pages/SignIn/styles.ts",[],"/home/samuel/Github/Go_Barber/web/src/pages/SignUp/styles.ts",[],"/home/samuel/Github/Go_Barber/web/src/utils/getValidationErrors.ts",[],"/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/styles.ts",[],"/home/samuel/Github/Go_Barber/web/src/components/Button/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/components/Input/index.tsx",["102"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useCallback,\n  useState,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\n\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input\n        {...rest}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        ref={inputRef}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle className=\"icon\" size={20} color=\"#c53030\" />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/samuel/Github/Go_Barber/web/src/components/Input/styles.ts",[],"/home/samuel/Github/Go_Barber/web/src/components/Button/styles.ts",[],"/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/Toast/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/components/ToastContainer/Toast/styles.ts",[],"/home/samuel/Github/Go_Barber/web/src/components/Tooltip/index.tsx",[],"/home/samuel/Github/Go_Barber/web/src/components/Tooltip/styles.ts",[],["103","104","105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":24,"column":22,"nodeType":"120","messageId":"121","endLine":24,"endColumn":34},{"ruleId":"108","replacedBy":"122"},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},{"ruleId":"114","replacedBy":"125"},{"ruleId":"116","replacedBy":"126"},"lines-around-directive",["127"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'defaultValue' is assigned a value but never used.","Identifier","unusedVar",["127"],[],[],[],[],"padding-line-between-statements"]